{"version":3,"sources":["Components/Navbar.js","Components/Home.js","App.js","index.js"],"names":["Navbar","props","className","mode","href","title","onClick","toggleMode","type","role","id","htmlFor","Home","useState","text","setText","value","onChange","e","target","rows","placeholder","toUpperCase","toLowerCase","document","getElementById","select","navigator","clipboard","writeText","newText","split","join","filter","element","length","toPrecision","App","setMode","body","style","backgroundColor","color","exact","path","ReactDOM","render"],"mappings":"0NAkBeA,EAhBA,SAACC,GACZ,OACI,8BACI,qBAAKC,UAAS,yCAAoCD,EAAME,KAA1C,eAAqDF,EAAME,MAAzE,SACI,sBAAKD,UAAU,kBAAf,UACI,mBAAGA,UAAU,eAAeE,KAAK,IAAjC,SAAsCH,EAAMI,QAC5C,sBAAKH,UAAS,sCAAgD,UAAfD,EAAME,KAAmB,OAAS,SAAjF,UACI,uBAAOD,UAAU,mBAAmBI,QAASL,EAAMM,WAAYC,KAAK,WAAWC,KAAK,SAASC,GAAG,2BAChG,wBAAOR,UAAU,mBAAmBS,QAAQ,yBAA5C,UAAqF,UAAfV,EAAME,KAAmB,SAAW,UAA1G,2BCRT,SAASS,EAAKX,GAEzB,MAAwBY,mBAAS,IAAjC,mBAAOC,EAAP,KAAaC,EAAb,KA0BA,OACI,sBAAKb,UAAU,iBAAf,UACI,sBAAKA,UAAU,OAAf,UACI,uBAAOS,QAAQ,SAAST,UAAU,aAAlC,SAA+C,6BAAI,kDAAqBD,EAAMa,YAC9E,0BAAUZ,UAAU,eAAeQ,GAAG,SAASM,MAAOF,EAAMG,SAAU,SAACC,GAAQH,EAAQG,EAAEC,OAAOH,QAAUI,KAAK,IAAIC,YAAY,yBAEnI,wBAAQb,KAAK,SAASN,UAAU,2BAA2BI,QA9B3C,WACpBS,EAAQD,EAAKQ,gBA6BT,mCACA,wBAAQd,KAAK,SAASN,UAAU,2BAA2BI,QA3B3C,WACpBS,EAAQD,EAAKS,gBA0BT,mCACA,wBAAQf,KAAK,SAASN,UAAU,2BAA2BI,QAxB3C,WAEpBS,EADc,KAuBV,wBACA,wBAAQP,KAAK,SAASN,UAAU,2BAA2BI,QApB5C,WACnB,IAAIQ,EAAOU,SAASC,eAAe,UACnCX,EAAKY,SACLC,UAAUC,UAAUC,UAAUf,EAAKE,QAiB/B,uBACA,wBAAQR,KAAK,SAASN,UAAU,2BAA2BI,QAf1C,WACrB,IAAIwB,EAAUhB,EAAKiB,MAAM,QACzBhB,EAAQe,EAAQE,KAAK,OAajB,iCAEA,sBAAK9B,UAAU,aAAf,UACI,oBAAIA,UAAU,OAAd,SAAqB,oDACrB,8BAAIY,EAAKiB,MAAM,OAAOE,QAAO,SAACC,GAAc,OAA0B,IAAnBA,EAAQC,UAAgBA,OAA3E,UAA0FrB,EAAKqB,OAA/F,gBACA,8BAAI,KAASrB,EAAKiB,MAAM,OAAOE,QAAO,SAACC,GAAc,OAA0B,IAAnBA,EAAQC,UAAgBA,OAAQC,YAAY,GAAxG,mBAGJ,sBAAKlC,UAAU,eAAf,UACI,oBAAIA,UAAU,OAAd,SAAqB,+CACrB,4BAAIY,EAAKqB,OAAS,EAAIrB,EAAO,6B,mBCd9BuB,MA9Bf,WAEE,MAAwBxB,mBAAS,SAAjC,mBAAOV,EAAP,KAAamC,EAAb,KAcA,OACE,eAAC,IAAD,WACE,cAAC,EAAD,CAAQjC,MAAM,YAAYF,KAAMA,EAAMI,WAdvB,WACJ,UAATJ,GACFmC,EAAQ,QACRd,SAASe,KAAKC,MAAMC,gBAAkB,gBACtCjB,SAASe,KAAKC,MAAME,MAAQ,UAE5BJ,EAAQ,SACRd,SAASe,KAAKC,MAAMC,gBAAkB,QACtCjB,SAASe,KAAKC,MAAME,MAAQ,YAO5B,qBAAKxC,UAAU,MAAf,SACE,cAAC,IAAD,UACE,cAAC,IAAD,CAAOyC,OAAK,EAACC,KAAK,IAAlB,SACE,cAAChC,EAAD,CAAME,KAAK,gCCvBvB+B,IAASC,OACP,cAAC,EAAD,IACAtB,SAASC,eAAe,W","file":"static/js/main.aaac8624.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nconst Navbar = (props) => {\r\n    return (\r\n        <div>\r\n            <nav className={`navbar navbar-expand-lg navbar-${props.mode} bg-${props.mode}`}>\r\n                <div className=\"container-fluid\">\r\n                    <a className=\"navbar-brand\" href=\"/\">{props.title}</a>\r\n                    <div className={`form-check form-switch text-${props.mode === \"light\" ? \"dark\" : \"light\"}`}>\r\n                        <input className=\"form-check-input\" onClick={props.toggleMode} type=\"checkbox\" role=\"switch\" id=\"flexSwitchCheckDefault\" />\r\n                        <label className=\"form-check-label\" htmlFor=\"flexSwitchCheckDefault\">{props.mode === \"light\" ? \"Enable\" : \"Disable\"} Dark Mode</label>\r\n                    </div>\r\n                </div>\r\n            </nav>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Navbar;","import React, { useState } from 'react';\r\n\r\nexport default function Home(props) {\r\n\r\n    const [text, setText] = useState(\"\");\r\n\r\n    const handleUpperCase = () => {\r\n        setText(text.toUpperCase());\r\n    }\r\n\r\n    const handleLowerCase = () => {\r\n        setText(text.toLowerCase());\r\n    }\r\n\r\n    const handleClearText = () => {\r\n        let newText = \"\";\r\n        setText(newText);\r\n    }\r\n\r\n    const handleCopyText = () => {\r\n        var text = document.getElementById(\"myText\");\r\n        text.select();\r\n        navigator.clipboard.writeText(text.value);\r\n    }\r\n\r\n    const handleExtraSpace = () => {\r\n        let newText = text.split(/[ ]+/);\r\n        setText(newText.join(\" \"));\r\n    }\r\n\r\n    return (\r\n        <div className=\"container my-4\">\r\n            <div className=\"mb-3\">\r\n                <label htmlFor=\"myText\" className=\"form-label\"><h3><strong>TextUtils - {props.text}</strong></h3></label>\r\n                <textarea className=\"form-control\" id=\"myText\" value={text} onChange={(e) => { setText(e.target.value) }} rows=\"5\" placeholder=\"Please Enter Text\"></textarea>\r\n            </div>\r\n            <button type=\"button\" className=\"btn btn-danger mx-1 my-1\" onClick={handleUpperCase}>Convert to Upper Case</button>\r\n            <button type=\"button\" className=\"btn btn-danger mx-1 my-1\" onClick={handleLowerCase}>Convert to Lower Case</button>\r\n            <button type=\"button\" className=\"btn btn-danger mx-1 my-1\" onClick={handleClearText}>Clear Text</button>\r\n            <button type=\"button\" className=\"btn btn-danger mx-1 my-1\" onClick={handleCopyText}>Copy Text</button>\r\n            <button type=\"button\" className=\"btn btn-danger mx-1 my-1\" onClick={handleExtraSpace}>Remove Extra Spaces</button>\r\n\r\n            <div className=\"count mt-4\">\r\n                <h4 className='mb-3'><strong>Word Counter</strong></h4>\r\n                <p>{text.split(/\\s+/).filter((element) => { return element.length !== 0 }).length} Words {text.length} Character</p>\r\n                <p>{0.008 * (text.split(/\\s+/).filter((element) => { return element.length !== 0 }).length).toPrecision(3)} Read Time</p>\r\n            </div>\r\n\r\n            <div className=\"preview mt-4\">\r\n                <h3 className='mb-3'><strong>Preview</strong></h3>\r\n                <p>{text.length > 0 ? text : \"Nothing To Preview\"}</p>\r\n            </div>\r\n        </div>\r\n    )\r\n}","import './App.css';\nimport Navbar from './Components/Navbar';\nimport Home from './Components/Home';\nimport React, { useState } from 'react';\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\n\nfunction App() {\n\n  const [mode, setMode] = useState(\"light\");\n\n  const toggleMode = () => {\n    if (mode === \"light\") {\n      setMode(\"dark\");\n      document.body.style.backgroundColor = \"rgb(29 28 38)\";\n      document.body.style.color = \"white\";\n    } else {\n      setMode(\"light\");\n      document.body.style.backgroundColor = \"white\";\n      document.body.style.color = \"black\";\n    }\n  }\n\n  return (\n    <Router>\n      <Navbar title=\"TextUtils\" mode={mode} toggleMode={toggleMode} />\n      <div className=\"app\">\n        <Switch>\n          <Route exact path=\"/\">\n            <Home text=\"Analyze your text\" />\n          </Route>\n        </Switch>\n      </div>\n    </Router>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n);"],"sourceRoot":""}